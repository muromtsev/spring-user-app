version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: user-api-postgres
    environment:
      POSTGRES_DB: user-api-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d user-api-db" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

  app:
    build: .
    container_name: user-api-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user-api-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_LIQUIBASE_ENABLED: true
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      postgres:
          condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge